:py:mod:`science_jubilee.Machine_MP`
====================================

.. py:module:: science_jubilee.Machine_MP

.. autoapi-nested-parse::

   Driver for Controlling Jubilee



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   science_jubilee.Machine_MP.Machine



Functions
~~~~~~~~~

.. autoapisummary::

   science_jubilee.Machine_MP.machine_is_homed



.. py:exception:: MachineConfigurationError


   Bases: :py:obj:`Exception`

   Raise this error if there is something wrong with how the machine is configured


.. py:exception:: MachineStateError


   Bases: :py:obj:`Exception`

   Raise this error if the machine is in the wrong state to perform the requested action.


.. py:function:: machine_is_homed(func)


.. py:class:: Machine(address=LOCALHOST, debug=False, simulated=False, reset=False, deck_config: str = None)


   Driver for sending motion cmds and polling the machine state.

   .. py:property:: configured_axes

      Return the configured axes of the machine.

   .. py:property:: configured_tools

      Return the configured tools.

   .. py:property:: position

      Returns the machine control point in mm.

   .. py:property:: active_tool_index

      Return the index of the current tool.

   .. py:property:: tool_z_offsets

      Return (in tool order) a list of tool's z offsets

   .. py:property:: axis_limits

      Return (in XYZU order) a list of tuples specifying (min, max) axis limit

   .. py:attribute:: LOCALHOST
      :value: 'Jubilee.local'

      

   .. py:method:: connect()

      Connect to Jubilee over http.


   .. py:method:: gcode(cmd: str = '', timeout: float = None)

      Send a GCode cmd; return the response


   .. py:method:: gcode_new(cmd: str = '', response_wait: float = 10)

      Send a GCode cmd; return the response


   .. py:method:: _set_absolute_positioning()

      Set absolute positioning for all axes except extrusion


   .. py:method:: _set_relative_positioning()

      Set relative positioning for all axes except extrusion


   .. py:method:: _set_absolute_extrusion()

      Set absolute positioning for extrusion


   .. py:method:: _set_relative_extrusion()

      Set relative positioning for extrusion


   .. py:method:: push_machine_state()

      Push machine state onto a stack


   .. py:method:: pop_machine_state()

      Recover previous machine state


   .. py:method:: download_file(filepath: str = None, timeout: float = None)

      Download the file into a file object. Full filepath must be specified.
      Example: /sys/tfree0.g


   .. py:method:: reset()

      Issue a software reset.


   .. py:method:: home_all()


   .. py:method:: home_xyu()

      Home the XY axes.
      Home Y before X to prevent possibility of crashing into the tool rack.


   .. py:method:: home_x()

      Home the X axis


   .. py:method:: home_y()

      Home the Y axis


   .. py:method:: home_u()

      Home the U (tool) axis


   .. py:method:: home_v()

      Home the V axis


   .. py:method:: home_z()

      Home the Z axis.
      Note that the Deck must be clear first.


   .. py:method:: home_e()

      Home the extruder axis (syringe)


   .. py:method:: home_in_place(*args: str)

      Set the current location of a machine axis or axes to 0.


   .. py:method:: _move_xyzev(x: float = None, y: float = None, z: float = None, e: float = None, v: float = None, s: float = 6000, param: str = None, wait: bool = False)

      Move X/Y/Z/E/V axes. Set absolute/relative mode externally.

      :param x:
      :type x: x position on the bed, in whatever units have been set (default mm)
      :param y:
      :type y: y position on the bed, in whatever units have been set (default mm)
      :param z:
      :type z: z position on the bed, in whatever units have been set (default mm)
      :param e:
      :type e: extruder position, in whatever units have been set (default mm)
      :param v:
      :type v: v axis position, in whatever units have been set (default mm)
      :param s:
      :type s: speed at which to move (default 6000 mm/min)

      :rtype: Nothing


   .. py:method:: move_to(x: float = None, y: float = None, z: float = None, e: float = None, v: float = None, s: float = 6000, param: str = None, wait: bool = False)

      Move to an absolute X/Y/Z/E/V position.

      :param x:
      :type x: x position on the bed, in whatever units have been set (default mm)
      :param y:
      :type y: y position on the bed, in whatever units have been set (default mm)
      :param z:
      :type z: z position on the bed, in whatever units have been set (default mm)
      :param e:
      :type e: extruder position, in whatever units have been set (default mm)
      :param v:
      :type v: v axis position, in whatever units have been set (default mm)
      :param s:
      :type s: speed at which to move (default 6000 mm/min)
      :param force_extrusion:
      :type force_extrusion: whether to force extrusion to also be absolute positioning (default True)

      :rtype: Nothing


   .. py:method:: move(dx: float = None, dy: float = None, dz: float = None, de: float = None, dv: float = None, s: float = 6000, param: str = None, wait: bool = False)

      Move relative to the current position

      :param dx:
      :type dx: change in x position, in whatever units have been set (default mm)
      :param dy:
      :type dy: change in y position, in whatever units have been set (default mm)
      :param dz:
      :type dz: change in z position, in whatever units have been set (default mm)
      :param de:
      :type de: change in e position, in whatever units have been set (default mm)
      :param dv:
      :type dv: change in v position, in whatever units have been set (default mm)
      :param s:
      :type s: speed at which to move (default 6000 mm/min)
      :param force_extrusion:
      :type force_extrusion: whether to force extrusion to also be relative positioning (default True)

      :rtype: Nothing


   .. py:method:: safe_z_movement()


   .. py:method:: dwell(t: float, millis: bool = True)

      Pause the machine for a period of time.

      :param t:
      :type t: time to pause, in milliseconds by default
      :param millis (optional):
      :type millis (optional): boolean, set to false to use seconds. default unit is milliseconds.

      :rtype: Nothing


   .. py:method:: _get_tool_index(tool_item: Union[int, science_jubilee.tools.Tool.Tool, str])


   .. py:method:: pickup_tool(tool_item: Union[int, science_jubilee.tools.Tool.Tool, str] = None)

      Pick up the tool specified by tool index.


   .. py:method:: park_tool()

      Park the current tool.


   .. py:method:: get_position()

      Get the current position, returns a dictionary with X/Y/Z/U/E/V keys


   .. py:method:: load_deck(deck_filename: str, path: str = os.path.join(os.path.dirname(__file__), 'decks', 'deck_definition'))


   .. py:method:: load_tool(tool: science_jubilee.tools.Tool.Tool = None)


   .. py:method:: load_labware(labware_filename: str, slot: int, path: str = None)


   .. py:method:: tool_lock()

      Runs Jubilee tool lock macro. Assumes tool_lock.g macro exists.


   .. py:method:: tool_unlock()

      Runs Jubilee tool unlock macro. Assumes tool_unlock.g macro exists.


   .. py:method:: disconnect()

      Close the connection.


   .. py:method:: __enter__()


   .. py:method:: __exit__(*args)



